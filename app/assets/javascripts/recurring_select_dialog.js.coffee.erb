window.RecurringSelectComponent =
  class RecurringSelectComponent
    constructor: (@opts) ->
      if @opts.value && @opts.value.val()
        @current_rule = { hash : JSON.parse(@opts.value.val()) }
      else
        @current_rule = { hash: {}, str: '' }

      @render()
      if not @current_rule.hash? or not @current_rule.hash.rule_type?
        @freqChanged()

    render: ->
      $(".recurring-component-container").remove()

      open_in = $(@opts.container)
      open_in.append @template()
      @outer_holder = $(".recurring-component-container")
      @content = @outer_holder.find ".recurring-component-content"
      @content.hide()
      @trigger = @outer_holder.find('.recurring-component-trigger-input')
      @end_date_selects = @outer_holder.find('.recurring-component-end-date select')
      @mainEventInit()
      @freqInit()
      @summaryInit()
      @freq_select.focus()
      @initUntilSelects()

    cancel: =>
      @outer_holder.remove()

    outerCancel: (event) =>
      if $(event.target).hasClass("recurring-component-container")
        @cancel()

    save: =>
      return if !@current_rule.str?
      @persistToForm()

    persistToForm: =>
      new_rule_hash_json = JSON.stringify(@current_rule.hash)
      @opts.value.val(new_rule_hash_json)

    initUntilSelects: =>
      defaultDate = new Date
      @outer_holder.find('.recurring-component-end-date-year').val(defaultDate.getFullYear())
      @outer_holder.find('.recurring-component-end-date-month').val(defaultDate.getMonth())
      @outer_holder.find('.recurring-component-end-date-day').val(defaultDate.getDate())
      @untilChanged()
# ========================= Init Methods ===============================

    mainEventInit: ->
      # Tap hooks are for jQueryMobile
      @outer_holder.on 'click tap', @outerCancel
      @content.find('input.rs_cancel').on "click tap", @cancel
      @trigger.click( => @content.toggle() )
      @end_date_selects.on('change', @untilChanged)
      

    freqInit: ->
      @freq_select = @outer_holder.find ".rs_frequency"
      if @current_rule.hash? && (rule_type = @current_rule.hash.rule_type)?
        if rule_type.search(/Weekly/) != -1
          @freq_select.prop('selectedIndex', 1)
          @initWeeklyOptions()
        else if rule_type.search(/Monthly/) != -1
          @freq_select.prop('selectedIndex', 2)
          @initMonthlyOptions()
        else if rule_type.search(/Yearly/) != -1
          @freq_select.prop('selectedIndex', 3)
          @initYearlyOptions()
        else
          @initDailyOptions()
      @freq_select.on "change", @freqChanged

    initDailyOptions: ->
      section = @content.find('.daily_options')
      interval_input = section.find('.rs_daily_interval')
      interval_input.val(@current_rule.hash.interval)
      interval_input.on "change keyup", @intervalChanged
      section.show()

    initWeeklyOptions: ->
      section = @content.find('.weekly_options')

      # connect the interval field
      interval_input = section.find('.rs_weekly_interval')
      interval_input.val(@current_rule.hash.interval)
      interval_input.on "change keyup", @intervalChanged

      # clear selected days
      section.find(".day_holder a").each (index, element) ->
        $(element).removeClass("selected")

      # connect the day fields
      if @current_rule.hash.validations? && @current_rule.hash.validations.day?
        $(@current_rule.hash.validations.day).each (index, val) ->
          section.find(".day_holder a[data-value='"+val+"']").addClass("selected")

      section.off('click', '.day_holder a').on "click", ".day_holder a", @daysChanged

      section.show()

    initMonthlyOptions: ->
      section = @content.find('.monthly_options')
      interval_input = section.find('.rs_monthly_interval')
      interval_input.val(@current_rule.hash.interval)
      interval_input.on "change keyup", @intervalChanged

      @current_rule.hash.validations ||= {}
      @current_rule.hash.validations.day_of_month ||= []
      @current_rule.hash.validations.day_of_week ||= {}
      @init_calendar_days(section)
      @init_calendar_weeks(section)

      in_week_mode = Object.keys(@current_rule.hash.validations.day_of_week).length > 0
      section.find(".monthly_rule_type_week").prop("checked", in_week_mode)
      section.find(".monthly_rule_type_day").prop("checked", !in_week_mode)
      @toggle_month_view()
      section.find("input[name=monthly_rule_type]").on "change", @toggle_month_view
      section.show()

    initYearlyOptions: ->
      section = @content.find('.yearly_options')
      interval_input = section.find('.rs_yearly_interval')
      interval_input.val(@current_rule.hash.interval)
      interval_input.on "change keyup", @intervalChanged
      section.show()


    summaryInit: ->
      @summary = @outer_holder.find(".rs_summary")
      @summaryUpdate()

# ========================= render methods ===============================

    update: =>
      @summaryUpdate()

    summaryUpdate: (new_string) =>
      @summary.width @content.width()
      if @current_rule.hash? && @current_rule.str?
        @summary.removeClass "fetching"
        rule_str = @current_rule.str.replace("*", "")
        if rule_str.length < 20
          rule_str = "#{$.fn.recurring_select.texts["summary"]}: "+rule_str
        @summary.find("span").html rule_str
      else
        @summary.addClass "fetching"
        @summary.find("span").html ""
        @summaryFetch()

    summaryFetch: ->
      return if !(@current_rule.hash? && (rule_type = @current_rule.hash.rule_type)?)
      @current_rule.hash['week_start'] = $.fn.recurring_select.texts["first_day_of_week"]
      $.ajax
        url: "<%= Rails.application.config.action_controller.relative_url_root %>/recurring_select/translate/#{$.fn.recurring_select.texts["locale_iso_code"]}",
        type: "POST",
        data: @current_rule.hash
        success: @summaryFetchSuccess

    summaryFetchSuccess: (data) =>
      @current_rule.str = data
      @summaryUpdate()
      @content.css {"width": "auto"}
      @save()

    init_calendar_days: (section) =>
      monthly_calendar = section.find(".rs_calendar_day")
      monthly_calendar.html ""
      for num in [1..31]
        monthly_calendar.append (day_link = $(document.createElement("a")).text(num))
        if $.inArray(num, @current_rule.hash.validations.day_of_month) != -1
          day_link.addClass("selected")

      # add last day of month button
      monthly_calendar.append (end_of_month_link = $(document.createElement("a")).text($.fn.recurring_select.texts["last_day"]))
      end_of_month_link.addClass("end_of_month")
      if $.inArray(-1, @current_rule.hash.validations.day_of_month) != -1
        end_of_month_link.addClass("selected")

      monthly_calendar.find("a").on "click tap", @dateOfMonthChanged

    init_calendar_weeks: (section) =>
      monthly_calendar = section.find(".rs_calendar_week")
      monthly_calendar.html ""
      row_labels = $.fn.recurring_select.texts["order"]
      show_row = $.fn.recurring_select.options["monthly"]["show_week"]
      cell_str = $.fn.recurring_select.texts["days_first_letter"]

      for num, index in [1, 2, 3, 4, 5, -1]
        if show_row[index]
          monthly_calendar.append "<span>#{row_labels[num - 1]}</span>"
          for day_of_week in [$.fn.recurring_select.texts["first_day_of_week"]...(7 + $.fn.recurring_select.texts["first_day_of_week"])]
            day_of_week = day_of_week % 7
            day_link = $("<a>", {text: cell_str[day_of_week] })
            day_link.attr("day", day_of_week)
            day_link.attr("instance", num)
            monthly_calendar.append day_link

      $.each @current_rule.hash.validations.day_of_week, (key, value) ->
        $.each value, (index, instance) ->
          section.find("a[day='#{key}'][instance='#{instance}']").addClass("selected")
      monthly_calendar.find("a").on "click tap", @weekOfMonthChanged

    toggle_month_view: =>
      week_mode = @content.find(".monthly_rule_type_week").prop("checked")
      @content.find(".rs_calendar_week").toggle(week_mode)
      @content.find(".rs_calendar_day").toggle(!week_mode)

# ========================= Change callbacks ===============================

    freqChanged: =>
      @current_rule.hash = null unless $.isPlainObject(@current_rule.hash) # for custom values

      @current_rule.hash ||= {}
      @current_rule.hash.interval = 1
      @current_rule.hash.until = null
      @current_rule.hash.count = null
      @current_rule.hash.validations = null
      @content.find(".freq_option_section").hide();
      @content.find("input[type=radio], input[type=checkbox]").prop("checked", false)
      switch @freq_select.val()
        when "Weekly"
          @current_rule.hash.rule_type = "IceCube::WeeklyRule"
          @current_rule.str = $.fn.recurring_select.texts["weekly"]
          @initWeeklyOptions()
        when "Monthly"
          @current_rule.hash.rule_type = "IceCube::MonthlyRule"
          @current_rule.str = $.fn.recurring_select.texts["monthly"]
          @initMonthlyOptions()
        when "Yearly"
          @current_rule.hash.rule_type = "IceCube::YearlyRule"
          @current_rule.str = $.fn.recurring_select.texts["yearly"]
          @initYearlyOptions()
        else
          @current_rule.hash.rule_type = "IceCube::DailyRule"
          @current_rule.str = $.fn.recurring_select.texts["daily"]
          @initDailyOptions()

    intervalChanged: (event) =>
      @current_rule.str = null
      @current_rule.hash ||= {}
      @current_rule.hash.interval = parseInt($(event.currentTarget).val())
      if @current_rule.hash.interval < 1 || isNaN(@current_rule.hash.interval)
        @current_rule.hash.interval = 1
      @update()

    untilChanged: () =>
      year = +@outer_holder.find('.recurring-component-end-date-year').val()
      month = +@outer_holder.find('.recurring-component-end-date-month').val()
      day = +@outer_holder.find('.recurring-component-end-date-day').val()

      @current_rule.str = null
      @current_rule.hash ||= {}
      @current_rule.hash.until = (new Date(year, month - 1, day + 1)).toISOString();
      @update()

    daysChanged: (event) =>
      $(event.currentTarget).toggleClass("selected")
      @current_rule.str = null
      @current_rule.hash ||= {}
      @current_rule.hash.validations = {}
      raw_days = @content.find(".day_holder a.selected").map -> parseInt($(this).data("value"))
      @current_rule.hash.validations.day = raw_days.get()
      @update()
      false # this prevents default and propogation

    dateOfMonthChanged: (event) =>
      $(event.currentTarget).toggleClass("selected")
      @current_rule.str = null
      @current_rule.hash ||= {}
      @current_rule.hash.validations = {}
      raw_days = @content.find(".monthly_options .rs_calendar_day a.selected").map ->
        res = if $(this).text() == $.fn.recurring_select.texts["last_day"] then -1 else parseInt($(this).text())
        res
      @current_rule.hash.validations.day_of_week = {}
      @current_rule.hash.validations.day_of_month = raw_days.get()
      @update()
      false

    weekOfMonthChanged: (event) =>
      $(event.currentTarget).toggleClass("selected")
      @current_rule.str = null
      @current_rule.hash ||= {}
      @current_rule.hash.validations = {}
      @current_rule.hash.validations.day_of_month = []
      @current_rule.hash.validations.day_of_week = {}
      @content.find(".monthly_options .rs_calendar_week a.selected").each (index, elm) =>
        day = parseInt($(elm).attr("day"))
        instance = parseInt($(elm).attr("instance"))
        @current_rule.hash.validations.day_of_week[day] ||= []
        @current_rule.hash.validations.day_of_week[day].push instance
      @update()
      false

# ========================= Change callbacks ===============================

    template: () ->
      str = "
      <div class='recurring-component-container'>
        <div class='recurring-component-trigger'>
          <p>
            <label for='recurring-component-trigger-input'>Recurrence...</label>
            <input class='recurring-component-trigger-input' id='recurring-component-trigger-input' type='checkbox' value='0'>
          </p>
        </div>
        <div class='recurring-component-content'>
          <p class='frequency-select-wrapper'>
            <label for='rs_frequency'>#{$.fn.recurring_select.texts["frequency"]}:</label>
            <select data-wrapper-class='ui-recurring-select' id='rs_frequency' class='rs_frequency' name='rs_frequency'>
              <option value='Weekly'>#{$.fn.recurring_select.texts["weekly"]}</option>
              <option value='Monthly'>#{$.fn.recurring_select.texts["monthly"]}</option>
            </select>
          </p>

          <div class='daily_options freq_option_section'>
            <p>
              #{$.fn.recurring_select.texts["every"]}
              <input type='text' data-wrapper-class='ui-recurring-select' name='rs_daily_interval' class='rs_daily_interval rs_interval' value='1' size='2' />
              #{$.fn.recurring_select.texts["days"]}
            </p>
          </div>
          <div class='weekly_options freq_option_section'>
            <p>
              #{$.fn.recurring_select.texts["every"]}
              <input type='text' data-wrapper-class='ui-recurring-select' name='rs_weekly_interval' class='rs_weekly_interval rs_interval' value='1' size='2' />
              #{$.fn.recurring_select.texts["weeks_on"]}:
            </p>
            <div class='day_holder'>
      "
      for day_of_week in [$.fn.recurring_select.texts["first_day_of_week"]...(7 + $.fn.recurring_select.texts["first_day_of_week"])]
        day_of_week = day_of_week % 7
        str += "<a href='#' data-value='#{day_of_week}'>#{$.fn.recurring_select.texts["days_first_letter"][day_of_week]}</a>"

      str += "
            </div>
            <span style='clear:both; visibility:hidden; height:1px;'>.</span>
          </div>
          <div class='monthly_options freq_option_section'>
            <p>
              #{$.fn.recurring_select.texts["every"]}
              <input type='text' data-wrapper-class='ui-recurring-select' name='rs_monthly_interval' class='rs_monthly_interval rs_interval' value='1' size='2' />
              #{$.fn.recurring_select.texts["months"]}:
            </p>
            <p class='monthly_rule_type'>
              <span><label for='monthly_rule_type_day'>#{$.fn.recurring_select.texts["day_of_month"]}</label><input type='radio' class='monthly_rule_type_day' name='monthly_rule_type' id='monthly_rule_type_day' value='true' /></span>
              <span><label for='monthly_rule_type_week'>#{$.fn.recurring_select.texts["day_of_week"]}</label><input type='radio' class='monthly_rule_type_week' name='monthly_rule_type' id='monthly_rule_type_week' value='true' /></span>
            </p>
            <p class='rs_calendar_day'></p>
            <p class='rs_calendar_week'></p>
          </div>
          <div class='yearly_options freq_option_section'>
            <p>
              #{$.fn.recurring_select.texts["every"]}
              <input type='text' data-wrapper-class='ui-recurring-select' name='rs_yearly_interval' class='rs_yearly_interval rs_interval' value='1' size='2' />
              #{$.fn.recurring_select.texts["years"]}
            </p>
          </div>
          <p class='recurring-component-end-date'>
              <label>Repeat end time</label>
              <select class='recurring-component-end-date-year'>
                <option value='2016'>2016</option>
                <option value='2017'>2017</option>
                <option value='2018'>2018</option>
                <option value='2019'>2019</option>
                <option value='2020'>2020</option>
                <option value='2021'>2021</option>
                <option value='2021'>2022</option>
                <option value='2021'>2023</option>
                <option value='2021'>2024</option>
                <option value='2021'>2025</option>
              </select>
              <select class='recurring-component-end-date-month'>
                <option value='1'>January</option>
                <option value='2'>February</option>
                <option value='3'>March</option>
                <option value='4'>April</option>
                <option value='5'>May</option>
                <option value='6'>June</option>
                <option value='7'>July</option>
                <option value='8'>August</option>
                <option value='9'>September</option>
                <option value='10'>October</option>
                <option value='11'>November</option>
                <option value='12'>December</option>
              </select>
              <select  class='recurring-component-end-date-day'>
                <option value='1'>1</option>
                <option value='2'>2</option>
                <option value='3'>3</option>
                <option value='4'>4</option>
                <option value='5'>5</option>
                <option value='6'>6</option>
                <option value='7'>7</option>
                <option value='8'>8</option>
                <option value='9'>9</option>
                <option value='10'>10</option>
                <option value='11'>11</option>
                <option value='12'>12</option>
                <option value='13'>13</option>
                <option value='14'>14</option>
                <option value='15'>15</option>
                <option value='16'>16</option>
                <option value='17'>17</option>
                <option value='18'>18</option>
                <option value='19'>19</option>
                <option value='20'>20</option>
                <option value='21'>21</option>
                <option value='22'>22</option>
                <option value='23'>23</option>
                <option value='24'>24</option>
                <option value='25'>25</option>
                <option value='26'>26</option>
                <option value='27'>27</option>
                <option value='28'>28</option>
                <option value='29'>29</option>
                <option value='30'>30</option>
                <option value='31'>31</option>
              </select>

          </p>
          <p class='rs_summary'>
            <span></span>
          </p>
        </div>
      </div>
      "
